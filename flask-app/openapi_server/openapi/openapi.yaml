openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    url: https://data2health.github.io/nlp-sandbox-data-node-schemas
  description: |
    The OpenAPI specification implemented by NLP Sandbox Data Nodes.
    # Overview
    A NLP Sandbox Data Node is a repository of clinical notes that implements this OpenAPI specification so that other services in the NLP Sandbox ecosystem can access them. For example, a client requests data from a Data Node before passing them as input to an NLP Tool like a Date Annotator, Person Name Annotator, etc.
    For the sake of benchmarking NLP Tool, a Data Node can also give access to the gold standard that the NLP Tool is expected to infer (e.g. annotations).
  license:
    name: Apache 2.0
    url: https://github.com/data2health/nlp-sandbox/blob/master/LICENSE
  title: NLP Sandbox Data Node Schemas
  version: 1.0.0
  x-logo:
    url: https://data2health.github.io/nlp-sandbox-data-node-schemas/docs/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about clinical notes
  name: Note
paths:
  /annotations/dates:
    get:
      description: Returns the date annotations
      operationId: dates_read_all
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateAnnotation'
                type: array
          description: Success
        "403":
          description: Forbidden
      summary: Get all date annotations
      tags:
      - Date
      x-openapi-router-controller: openapi_server.controllers.date_controller
  /health:
    get:
      description: Get the health of the API
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Success
        "403":
          description: Forbidden
        "404":
          description: Note not found
      summary: Get Health
      tags:
      - Health
      x-openapi-router-controller: openapi_server.controllers.health_controller
  /notes:
    get:
      description: Returns the clinical notes
      operationId: notes_read_all
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Note'
                type: array
          description: Success
        "403":
          description: Forbidden
        "404":
          description: Note not found
      summary: Get all clinical notes
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /notes/{id}:
    get:
      description: Returns the clinical note for a given ID
      operationId: notes_read
      parameters:
      - description: The ID of the clinical note to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "403":
          description: Forbidden
        "404":
          description: Note not found
      summary: Get a clinical note by ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    put:
      description: This can only be done by the logged in user.
      operationId: notes_update
      parameters:
      - description: Updates the clinical note for a given ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        description: Updated clinical note
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid note supplied
        "404":
          description: Note not found
      summary: Update a clinical note by ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
components:
  schemas:
    Email:
      description: User email address
      example: john.smith@example.com
      format: test
      type: string
    User:
      properties:
        username:
          example: John78
          minLength: 4
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: Smith
          type: string
        email:
          description: User email address
          example: john.smith@example.com
          format: test
          type: string
      required:
      - email
      - firstName
      - lastName
      - username
      type: object
    Entity:
      properties:
        id:
          description: ID
          type: integer
        createdBy:
          $ref: '#/components/schemas/User'
        createdAt:
          description: When the entity has been created
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/User'
        updatedAt:
          description: When the entity has been updated
          format: date-time
          type: string
      required:
      - id
      type: object
    Note:
      allOf:
      - $ref: '#/components/schemas/Entity'
      description: A clinical note
      example:
        fileName: 260-01.xml
        text: October 3, Ms Chloe Price met with...
        type: pathology
      properties:
        text:
          description: The content of the note
          example: October 3, Ms Chloe Price met with...
          type: string
        fileName:
          description: The filename of the source note
          example: 260-01.xml
          type: string
        type:
          description: The note type
          enum:
          - pathology
          - phone_call
          type: string
      required:
      - text
      type: object
    Annotation:
      allOf:
      - $ref: '#/components/schemas/Entity'
      description: An annotation in a text
      properties:
        noteId:
          description: The note ID
          type: integer
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
      required:
      - length
      - noteId
      - start
      type: object
    DateAnnotation:
      allOf:
      - $ref: '#/components/schemas/Annotation'
      description: A date annotation in a text
      example:
        dateFormat: dateFormat
      properties:
        dateFormat:
          description: Date format (ISO 8601)
          type: string
      type: object
    Health:
      example:
        status: pass
      properties:
        status:
          description: Health status
          enum:
          - pass
          - warn
          type: string
      type: object
